






elementclass RAWDEV { DEVNAME $devname, DEVICE $device |

  input[0]
  -> ToDevice(DEVNAME $devname, METHOD LINUX, DEBUG false, BURST 1);



  FromDevice(DEVNAME $devname, PROMISC true, SNAPLEN 8190, OUTBOUND false, SNIFFER false, METHOD LINUX, HEADROOM 64, BURST 1)







  -> ToDump(FILENAME "/home/aureliano/Uni/METRIK/repository2/click-brn-scripts/501-testbed/001-function_tests/002-sender_and_receiver_multipower/5/wndr223.wlan1.raw.dump", SNAPLEN 8192)





  -> BRN2SetDeviceAnno(DEVICE $device)
  -> [0]output;
}

elementclass RAWWIFIDEV { DEVNAME $devname, DEVICE $device |
  rawdev::RAWDEV(DEVNAME $devname, DEVICE $device);

  input[0]

  -> WifiSeq()

  -> BrnRadiotapEncap()
  -> rawdev;

  rawdev
  -> dev_decap::BrnRadiotapDecap(DEBUG false)






  -> [0]output;
}

BRNAddressInfo(deviceaddress wlan1:eth);
wireless::BRN2Device(DEVICENAME "wlan1", ETHERADDRESS deviceaddress, DEVICETYPE "WIRELESS");

id::BRN2NodeIdentity(NAME wndr223, DEVICES wireless);

Idle
  -> wifidevice::RAWWIFIDEV(DEVNAME wlan1, DEVICE wireless)
  -> filter_tx :: FilterTX()
  -> error_clf :: WifiErrorClassifier()
  -> BRN2PrintWifi("OKPacket", TIMESTAMP true)
  -> discard::Discard;

error_clf[1]
  -> BRN2PrintWifi("CRCerror", TIMESTAMP true)
  -> discard;

error_clf[2]
  -> BRN2PrintWifi("PHYerror", TIMESTAMP true)
  -> discard;

error_clf[3]
  -> BRN2PrintWifi("FIFOerror", TIMESTAMP true)
  -> discard;

error_clf[4]
  -> BRN2PrintWifi("DECRYPTerror", TIMESTAMP true)
  -> discard;

error_clf[5]
  -> BRN2PrintWifi("MICerror", TIMESTAMP true)
  -> discard;

error_clf[6]
  -> BRN2PrintWifi("ZEROerror", TIMESTAMP true)
  -> discard;

error_clf[7]
  -> BRN2PrintWifi("UNKNOWNerror", TIMESTAMP true)
  -> discard;

filter_tx[1]
  -> BRN2PrintWifi("TXFeedback", TIMESTAMP true)
  -> discard;

sys_info::SystemInfo(NODEIDENTITY id, CPUTIMERINTERVAL 1000);

Script(
 wait 5,
 read sys_info.systeminfo
);
ControlSocket(tcp, 7777);
Script(wait 30, stop);
