#define DEBUGLEVEL 2

#include "config.h"

//#define RAWDUMP

#define CST cst

#if WIFITYPE == 802
#define CST_PROCFILE "/sys/devices/pci0000\:00/0000\:00\:11.0/stats/channel_utility"
#else
#define CST_PROCFILE "/proc/net/madwifi/NODEDEVICE/channel_utility"
#endif

//include unter helper/measurement/etc/click

#include "brn/helper.inc"
#include "brn/brn.click"
#include "device/rawwifidev.click"

AddressInfo(deviceaddress NODEDEVICE:eth);
wireless::BRN2Device(DEVICENAME "NODEDEVICE", ETHERADDRESS deviceaddress, DEVICETYPE "WIRELESS");

wifidevice::RAWWIFIDEV(DEVNAME NODEDEVICE, DEVICE wireless);

id::BRN2NodeIdentity(NAME NODENAME, DEVICES wireless);

ps::BRN2PacketSource(SIZE PACKETSIZE_PARAMS, RATE RATE_PARAMS, MAXSEQ 500000, BURST 1, ACTIVE true)
#ifdef USE_BROADCAST
  -> EtherEncap(0x8086, deviceaddress, ff:ff:ff:ff:ff:ff)
#else
#ifdef SIMULATION
  -> EtherEncap(0x8086, deviceaddress, 00-00-00-00-00-01 )
#else
  -> EtherEncap(0x8086, deviceaddress, 06-1B-B1-05-3B-A2 )
#endif
#endif
  -> WifiEncap(0x00, 0:0:0:0:0:0)
//-> BRN2PrintWifi("Sender", TIMESTAMP true)
  -> SetTXRates(RATE0 2, TRIES0 1, TRIES1 0, TRIES2 0, TRIES3 0)
  -> SetTXPower(13)
  -> wifioutq::NotifierQueue(1000)
  -> wifidevice
  -> discard::Discard;

//Script(
// wait 1,
// read wifidevice/cst.stats,
// loop
//);
